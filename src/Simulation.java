/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Avishek
 */
public class Simulation extends javax.swing.JFrame {

    /**
     * Creates new form Simulation
     */
    public Simulation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        maxLoadTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        queueSizeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        delayTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        noOfRequestTextField = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        serverStatusLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        requestProcessingLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputQueueLoadLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        outputQueueLoadLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("DIPSimulation"); // NOI18N
        setResizable(false);

        jLabel1.setText("Queue Size : ");

        maxLoadTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxLoadTextField.setText("0");
        maxLoadTextField.setName("maxLoadTextField"); // NOI18N
        maxLoadTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxLoadTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Server Max Load : ");

        queueSizeTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        queueSizeTextField.setText("0");
        queueSizeTextField.setName("queueSizeTextField"); // NOI18N
        queueSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queueSizeTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Service Delay : ");

        delayTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        delayTextField.setText("0");
        delayTextField.setName("delayTextField"); // NOI18N

        jLabel4.setText("Generate No of Requets : ");

        noOfRequestTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        noOfRequestTextField.setText("0");
        noOfRequestTextField.setName("noOfRequestTextField"); // NOI18N

        runButton.setText("Run");
        runButton.setName("runButton"); // NOI18N
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Service Status : ");
        jLabel5.setToolTipText("");

        serverStatusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        serverStatusLabel.setForeground(new java.awt.Color(255, 0, 0));
        serverStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        serverStatusLabel.setText("Running");
        serverStatusLabel.setName("serverStatusLabel"); // NOI18N

        jLabel7.setText("No of Request Processing : ");

        requestProcessingLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        requestProcessingLabel.setForeground(new java.awt.Color(255, 0, 0));
        requestProcessingLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        requestProcessingLabel.setText("0");
        requestProcessingLabel.setName("requestProcessingLabel"); // NOI18N

        jLabel6.setText("Input Queue Load : ");

        inputQueueLoadLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        inputQueueLoadLabel.setForeground(new java.awt.Color(255, 0, 0));
        inputQueueLoadLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputQueueLoadLabel.setText("0");
        inputQueueLoadLabel.setName("inputQueueLoadLabel"); // NOI18N

        jLabel8.setText("Output Queue Load : ");

        outputQueueLoadLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        outputQueueLoadLabel.setForeground(new java.awt.Color(255, 0, 0));
        outputQueueLoadLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        outputQueueLoadLabel.setText("0");
        outputQueueLoadLabel.setName("queueLoadLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outputQueueLoadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputQueueLoadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(requestProcessingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(runButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(maxLoadTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(noOfRequestTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(delayTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(queueSizeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(serverStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(queueSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(maxLoadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(delayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(noOfRequestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(runButton)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverStatusLabel)
                    .addComponent(jLabel5))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(requestProcessingLabel))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputQueueLoadLabel))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(outputQueueLoadLabel))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jLabel3.getAccessibleContext().setAccessibleDescription("");
        jLabel4.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void maxLoadTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxLoadTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxLoadTextFieldActionPerformed

    private void queueSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queueSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queueSizeTextFieldActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed

        int queueSize= Integer.parseInt(queueSizeTextField.getText());
        int maxLoad= Integer.parseInt(maxLoadTextField.getText());
        int serviceDelay= Integer.parseInt(delayTextField.getText());
        int totalRequest= Integer.parseInt(noOfRequestTextField.getText());
        
        IQueue<Request> inQueue=new AQueue<Request>(queueSize);
        IQueue<Response> outQueue=new AQueue<Response>(queueSize);
        
        IService service=new Service(inQueue,outQueue,maxLoad,serviceDelay);
        IService serviceEdge=new ServiceEdge(inQueue,outQueue,service);
        
        
        Thread randomRequestGenerator = new Thread(new RequestGenerator(totalRequest,serviceEdge));
        randomRequestGenerator.start();
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_runButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField delayTextField;
    public static javax.swing.JLabel inputQueueLoadLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField maxLoadTextField;
    private javax.swing.JTextField noOfRequestTextField;
    public static javax.swing.JLabel outputQueueLoadLabel;
    private javax.swing.JTextField queueSizeTextField;
    public static javax.swing.JLabel requestProcessingLabel;
    private javax.swing.JButton runButton;
    public static javax.swing.JLabel serverStatusLabel;
    // End of variables declaration//GEN-END:variables
}
